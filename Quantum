import discord
from discord import app_commands
import random
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()
TOKEN = os.getenv("DISCORD_BOT_TOKEN")

# Bot setup
intents = discord.Intents.default()
bot = discord.Client(intents=intents)
tree = app_commands.CommandTree(bot)

# Custom emoji mappings (update with actual emoji IDs from your server)
DICE_EMOJIS = {
    1: "<:b1:1338257567872454837>",
    2: "<:f2:1338257569948631130>",
    3: "<:f3:1338257571227893812>",
    4: "<:f4:1338257572846632984>",
    5: "<:f5:1338257574012780574>",
    6: "<:f6:1338257575069880384>",
    7: "<:s7:1338257576177041580>",
    8: "<:s8:1338257655919022181>",
    9: "<:s9:1338257578932572331>",
    10: "<:c10:1338257568929288273>"
}

def roll_dice(pool, difficulty, mega_dice=0, auto_successes=0, specialty=False):
    regular_rolls = []
    for _ in range(pool):
        roll = random.randint(1, 10)
        regular_rolls.append(roll)
        if specialty and roll == 10:
            regular_rolls.append(random.randint(1, 10))
    
    mega_rolls = [random.randint(1, 10) for _ in range(mega_dice)]
    
    regular_successes = sum(1 for r in regular_rolls if r >= difficulty)
    mega_successes = sum(2 if r in [7, 8, 9] else 3 if r == 10 else 0 for r in mega_rolls)
    total_successes = regular_successes + mega_successes + auto_successes
    
    botches = (regular_rolls.count(1) + mega_rolls.count(1)) if total_successes == 0 else 0
    
    return regular_rolls, mega_rolls, total_successes, botches

@tree.command(name="ab", description="Rolls dice for Aberrant (d10 system)")
async def roll(interaction: discord.Interaction, pool: int, difficulty: int = 7, mega_dice: int = 0, auto_successes: int = 0, specialty: bool = False, comments: str = None):
    if pool < 1 or difficulty < 2 or difficulty > 10:
        await interaction.response.send_message("Invalid input. Make sure pool is at least 1 and difficulty is between 2 and 10.")
        return
    
    regular_rolls, mega_rolls, total_successes, botches = roll_dice(pool, difficulty, mega_dice, auto_successes, specialty)
    
    emoji_regular = [DICE_EMOJIS.get(r, str(r)) for r in regular_rolls]
    emoji_mega = [DICE_EMOJIS.get(r, str(r)) for r in mega_rolls]
    
    embed_color = discord.Color.green() if total_successes > 0 else discord.Color.red()
    embed_title = "Aberrant Dice Roll"
    embed_description = ""
    
    if botches > 0 and total_successes == 0:
        embed_color = discord.Color.dark_red()
        embed_title = "Botch!"
        embed_description = "Botch!"
    
    embed = discord.Embed(title=embed_title, color=embed_color, description=embed_description)
    embed.add_field(name="Regular Rolls", value=" ".join(emoji_regular) if emoji_regular else "None", inline=False)
    embed.add_field(name="Mega Rolls", value=" ".join(emoji_mega) if emoji_mega else "None", inline=False)
    embed.add_field(name="Successes", value=str(total_successes), inline=True)
    embed.add_field(name="Botches", value=str(botches), inline=True)

    if comments:
        embed.add_field(name="Comments", value=comments, inline=False)
    
    await interaction.response.send_message(embed=embed)

@bot.event
async def on_ready():
    await tree.sync()
    print(f'Logged in as {bot.user}')

if TOKEN:
    bot.run(TOKEN)
else:
    print("Error: Bot token not found. Please set up a .env file with DISCORD_BOT_TOKEN.")
